{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devik\\\\OneDrive\\\\Desktop\\\\mini project\\\\Mini-project\\\\Frontend\\\\front-end-main\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatbot.css\"; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatVisible, setChatVisible] = useState(false);\n\n  // Function to toggle the chat visibility\n  const toggleChat = () => {\n    setChatVisible(!chatVisible);\n  };\n\n  // Function to add messages to the chat\n  const addMessage = (text, sender) => {\n    setMessages(prevMessages => [...prevMessages, {\n      text,\n      sender\n    }]);\n  };\n\n  // Function to handle sending messages\n  const sendMessage = async () => {\n    if (!userInput) return;\n    addMessage(userInput, \"user\");\n    setUserInput(\"\");\n    try {\n      const response = await fetch(\"/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: userInput\n        })\n      });\n      const data = await response.json();\n      if (data.reply) {\n        addMessage(data.reply, \"bot\");\n      } else {\n        addMessage(\"Error: \" + data.error, \"bot\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      addMessage(\"Failed to connect to the server.\", \"bot\");\n    }\n  };\n\n  // Handle Enter key press to send message\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chat-btn\",\n      className: \"btn\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fas ${chatVisible ? \"fa-times\" : \"fa-comments\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), chatVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-container\",\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-container\",\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user-input\",\n          className: \"form-control\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type a message...\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send-btn\",\n          className: \"btn\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"ZZM7/ByQI9s4bOkFR7R29Bm1ECI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","chatVisible","setChatVisible","toggleChat","addMessage","text","sender","prevMessages","sendMessage","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","reply","error","console","handleKeyPress","event","key","children","id","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","onKeyPress","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/devik/OneDrive/Desktop/mini project/Mini-project/Frontend/front-end-main/src/components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatbot.css\"; // Import the CSS for styling\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [chatVisible, setChatVisible] = useState(false);\r\n\r\n  // Function to toggle the chat visibility\r\n  const toggleChat = () => {\r\n    setChatVisible(!chatVisible);\r\n  };\r\n\r\n  // Function to add messages to the chat\r\n  const addMessage = (text, sender) => {\r\n    setMessages((prevMessages) => [...prevMessages, { text, sender }]);\r\n  };\r\n\r\n  // Function to handle sending messages\r\n  const sendMessage = async () => {\r\n    if (!userInput) return;\r\n\r\n    addMessage(userInput, \"user\");\r\n    setUserInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ prompt: userInput }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.reply) {\r\n        addMessage(data.reply, \"bot\");\r\n      } else {\r\n        addMessage(\"Error: \" + data.error, \"bot\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      addMessage(\"Failed to connect to the server.\", \"bot\");\r\n    }\r\n  };\r\n\r\n  // Handle Enter key press to send message\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Chat button */}\r\n      <button id=\"chat-btn\" className=\"btn\" onClick={toggleChat}>\r\n        <i className={`fas ${chatVisible ? \"fa-times\" : \"fa-comments\"}`}></i>\r\n      </button>\r\n\r\n      {/* Chat container */}\r\n      {chatVisible && (\r\n        <div id=\"chat-container\" className=\"mt-5\">\r\n          <div id=\"messages\">\r\n            {messages.map((message, index) => (\r\n              <div key={index} className={`message ${message.sender}`}>\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div id=\"input-container\" className=\"d-flex\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"user-input\"\r\n              className=\"form-control\"\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Type a message...\"\r\n              autoFocus\r\n            />\r\n            <button id=\"send-btn\" className=\"btn\" onClick={sendMessage}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}